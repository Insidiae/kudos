{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "D:\\workshops\\prisma-mongodb\\kudos\\app\\root.tsx", "D:\\workshops\\prisma-mongodb\\kudos\\app\\routes\\logout.ts", "../app/utils/auth.server.ts", "../app/utils/prisma.server.ts", "../app/utils/user.server.ts", "D:\\workshops\\prisma-mongodb\\kudos\\app\\routes\\index.ts", "D:\\workshops\\prisma-mongodb\\kudos\\app\\routes\\login.tsx", "../app/components/layout.tsx", "../app/components/formField.tsx", "../app/utils/validators.server.ts", "D:\\workshops\\prisma-mongodb\\kudos\\app\\routes\\home.tsx", "../app/components/userPanel.tsx", "../app/components/userCircle.tsx", "D:\\workshops\\prisma-mongodb\\kudos\\app\\routes\\home\\kudo.$userId.tsx", "../app/components/portal.tsx", "../app/components/modal.tsx", "../app/components/selectBox.tsx", "../app/utils/constants.ts", "../app/components/kudo.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport styles from \"./styles/app.css\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\n", "import { redirect } from \"@remix-run/node\";\r\n\r\nimport { logout } from \"~/utils/auth.server\";\r\n\r\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => logout(request);\r\n\r\nexport const loader: LoaderFunction = async () => redirect(\"/\");\r\n", "import { redirect, json, createCookieSessionStorage } from \"@remix-run/node\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { prisma } from \"./prisma.server\";\r\nimport { createUser } from \"./user.server\";\r\n\r\nimport type { LoginForm, RegisterForm } from \"./types.server\";\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret) {\r\n  throw new Error(\"SESSION_SECRET must be set\");\r\n}\r\n\r\nconst storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"kudos-session\",\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    secrets: [sessionSecret],\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n});\r\n\r\nexport async function createUserSession(userId: string, redirectTo: string) {\r\n  const session = await storage.getSession();\r\n  session.set(\"userId\", userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.commitSession(session),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function register(user: RegisterForm) {\r\n  const exists = await prisma.user.count({ where: { email: user.email } });\r\n\r\n  if (exists) {\r\n    return json(\r\n      { error: `User already exists with that email` },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const newUser = await createUser(user);\r\n  if (!newUser) {\r\n    return json(\r\n      {\r\n        error: `Something went wrong trying to create a new user.`,\r\n        fields: { email: user.email, password: user.password },\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession(newUser.id, \"/\");\r\n}\r\n\r\nexport async function login({ email, password }: LoginForm) {\r\n  const user = await prisma.user.findUnique({\r\n    select: {\r\n      id: true,\r\n      password: true,\r\n    },\r\n    where: { email },\r\n  });\r\n\r\n  if (!user || !(await bcrypt.compare(password, user.password))) {\r\n    return json({ error: \"Incorrect login\" }, { status: 400 });\r\n  }\r\n\r\n  return createUserSession(user.id, \"/\");\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getUserSession(request);\r\n\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n\r\n  if (!userId || typeof userId !== \"string\") {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\nfunction getUserSession(request: Request) {\r\n  return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\n\r\nasync function getUserId(request: Request) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n\r\n  if (!userId || typeof userId !== \"string\") {\r\n    return null;\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n\r\n  if (typeof userId !== \"string\") {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const user = await prisma.user.findUnique({\r\n      where: { id: userId },\r\n      select: { id: true, email: true, profile: true },\r\n    });\r\n\r\n    return user;\r\n  } catch {\r\n    throw logout(request);\r\n  }\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet prisma: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n  prisma.$connect();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n    global.__db.$connect();\r\n  }\r\n\r\n  prisma = global.__db;\r\n}\r\n\r\nexport * from \"@prisma/client\";\r\nexport { prisma };\r\n", "import bcrypt from \"bcryptjs\";\r\n\r\nimport { prisma } from \"./prisma.server\";\r\n\r\nimport type { RegisterForm } from \"./types.server\";\r\n\r\nexport async function createUser(user: RegisterForm) {\r\n  const passwordHash = await bcrypt.hash(user.password, 10);\r\n  const newUser = await prisma.user.create({\r\n    data: {\r\n      email: user.email,\r\n      password: passwordHash,\r\n      profile: {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n      },\r\n    },\r\n  });\r\n\r\n  return { id: newUser.id, email: user.email };\r\n}\r\n\r\nexport const getOtherUsers = async (userId: string) => {\r\n  return prisma.user.findMany({\r\n    where: {\r\n      id: { not: userId },\r\n    },\r\n    orderBy: {\r\n      profile: {\r\n        firstName: \"asc\",\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nexport const getUserById = async (userId: string) => {\r\n  return await prisma.user.findUnique({\r\n    where: {\r\n      id: userId,\r\n    },\r\n  });\r\n};\r\n", "import { redirect } from \"@remix-run/node\";\r\n\r\nimport { requireUserId } from \"~/utils/auth.server\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  await requireUserId(request);\r\n  return redirect(\"/home\");\r\n};\r\n", "import * as React from \"react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useActionData } from \"@remix-run/react\";\r\n\r\nimport { Layout } from \"~/components/layout\";\r\nimport { FormField } from \"~/components/formField\";\r\nimport { getUser, login, register } from \"~/utils/auth.server\";\r\nimport {\r\n  validateEmail,\r\n  validateName,\r\n  validatePassword,\r\n} from \"~/utils/validators.server\";\r\n\r\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return (await getUser(request)) ? redirect(\"/\") : null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"_action\");\r\n  const email = form.get(\"email\");\r\n  const password = form.get(\"password\");\r\n  let firstName = form.get(\"firstName\");\r\n  let lastName = form.get(\"lastName\");\r\n\r\n  if (\r\n    typeof action !== \"string\" ||\r\n    typeof email !== \"string\" ||\r\n    typeof password !== \"string\"\r\n  ) {\r\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\r\n  }\r\n\r\n  if (\r\n    action === \"register\" &&\r\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\r\n  ) {\r\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\r\n  }\r\n\r\n  const errors = {\r\n    email: validateEmail(email),\r\n    password: validatePassword(password),\r\n    ...(action === \"register\"\r\n      ? {\r\n          firstName: validateName((firstName as string) || \"\"),\r\n          lastName: validateName((lastName as string) || \"\"),\r\n        }\r\n      : {}),\r\n  };\r\n\r\n  if (Object.values(errors).some(Boolean)) {\r\n    return json(\r\n      {\r\n        errors,\r\n        fields: { email, password, firstName, lastName },\r\n        form: action,\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  switch (action) {\r\n    case \"login\": {\r\n      return await login({ email, password });\r\n    }\r\n\r\n    case \"register\": {\r\n      firstName = firstName as string;\r\n      lastName = lastName as string;\r\n      return await register({ email, password, firstName, lastName });\r\n    }\r\n\r\n    default:\r\n      return json({ error: `Invalid Form Data` }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData();\r\n\r\n  const [action, setAction] = React.useState<\"login\" | \"register\">(\"login\");\r\n  const [formData, setFormData] = React.useState({\r\n    email: actionData?.fields?.email || \"\",\r\n    password: actionData?.fields?.password || \"\",\r\n    firstName: actionData?.fields?.firstName || \"\",\r\n    lastName: actionData?.fields?.lastName || \"\",\r\n  });\r\n\r\n  const firstLoad = React.useRef(true);\r\n  const [errors, setErrors] = React.useState(actionData?.errors || {});\r\n  const [formError, setFormError] = React.useState(actionData?.error || \"\");\r\n\r\n  React.useEffect(() => {\r\n    if (!firstLoad.current) {\r\n      const newState = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n      };\r\n      setErrors(newState);\r\n      setFormError(\"\");\r\n      setFormData(newState);\r\n    }\r\n  }, [action]);\r\n\r\n  React.useEffect(() => {\r\n    if (!firstLoad.current) {\r\n      setFormError(\"\");\r\n    }\r\n  }, [formData]);\r\n\r\n  React.useEffect(() => {\r\n    firstLoad.current = false;\r\n  }, []);\r\n\r\n  // Updates the form data when an input changes\r\n  function handleInputChange(\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    field: string\r\n  ) {\r\n    setFormData((form) => ({ ...form, [field]: event.target.value }));\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\r\n        <button\r\n          onClick={() => setAction(action === \"login\" ? \"register\" : \"login\")}\r\n          className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n        >\r\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\r\n        </button>\r\n\r\n        <h2 className=\"text-yellow-300 font-extrabold text-5xl\">\r\n          Welcome to Kudos!\r\n        </h2>\r\n        <p className=\"font-semibold text-slate-300\">\r\n          {action === \"login\"\r\n            ? \"Log In To Give Some Praise!\"\r\n            : \"Sign Up To Get Started!\"}\r\n        </p>\r\n\r\n        <form method=\"post\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\r\n          <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\r\n            {formError}\r\n          </div>\r\n\r\n          <FormField\r\n            htmlFor=\"email\"\r\n            label=\"Email\"\r\n            value={formData.email}\r\n            onChange={(e) => handleInputChange(e, \"email\")}\r\n            error={errors?.email}\r\n          />\r\n          <FormField\r\n            htmlFor=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            value={formData.password}\r\n            onChange={(e) => handleInputChange(e, \"password\")}\r\n            error={errors?.password}\r\n          />\r\n          {action === \"register\" && (\r\n            <>\r\n              <FormField\r\n                htmlFor=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => handleInputChange(e, \"firstName\")}\r\n                value={formData.firstName}\r\n                error={errors?.firstName}\r\n              />\r\n              <FormField\r\n                htmlFor=\"lastName\"\r\n                label=\"Last Name\"\r\n                onChange={(e) => handleInputChange(e, \"lastName\")}\r\n                value={formData.lastName}\r\n                error={errors?.lastName}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <div className=\"w-full text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value={action}\r\n              className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n            >\r\n              {action === \"login\" ? \"Sign In\" : \"Sign Up\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n", "export function Layout({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <div className=\"h-screen w-full bg-blue-600 font-mono\">{children}</div>\r\n  );\r\n}\r\n", "import * as React from \"react\";\r\n\r\ninterface FormFieldProps {\r\n  htmlFor: string;\r\n  label: string;\r\n  type?: string;\r\n  value: any;\r\n  onChange?: (...args: any) => any;\r\n  error?: string;\r\n}\r\n\r\nexport function FormField({\r\n  htmlFor,\r\n  label,\r\n  type = \"text\",\r\n  value,\r\n  onChange = () => {},\r\n  error = \"\",\r\n}: FormFieldProps) {\r\n  const [errorText, setErrorText] = React.useState(error);\r\n\r\n  React.useEffect(() => {\r\n    setErrorText(error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={htmlFor} className=\"text-blue-600 font-semibold\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        onChange={(e) => {\r\n          onChange(e);\r\n          setErrorText(\"\");\r\n        }}\r\n        type={type}\r\n        id={htmlFor}\r\n        name={htmlFor}\r\n        className=\"w-full p-2 rounded-xl my-2\"\r\n        value={value}\r\n      />\r\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\r\n        {errorText || \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n", "export const validateEmail = (email: string): string | undefined => {\r\n  var validRegex =\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  if (!email.length || !validRegex.test(email)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n};\r\n\r\nexport const validatePassword = (password: string): string | undefined => {\r\n  if (password.length < 5) {\r\n    return \"Please enter a password that is at least 5 characters long\";\r\n  }\r\n};\r\n\r\nexport const validateName = (name: string): string | undefined => {\r\n  if (!name.length) return `Please enter a value`;\r\n};\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData, Outlet } from \"@remix-run/react\";\r\n\r\nimport { UserPanel } from \"~/components/userPanel\";\r\nimport { Layout } from \"~/components/layout\";\r\nimport { requireUserId } from \"~/utils/auth.server\";\r\nimport { getOtherUsers } from \"~/utils/user.server\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n  const users = await getOtherUsers(userId);\r\n  return json({ users });\r\n};\r\n\r\nexport default function Home() {\r\n  const { users } = useLoaderData();\r\n\r\n  return (\r\n    <Layout>\r\n      <Outlet />\r\n      <div className=\"h-full flex\">\r\n        <UserPanel users={users} />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n", "import { useNavigate } from \"@remix-run/react\";\r\n\r\nimport { UserCircle } from \"./userCircle\";\r\n\r\nimport type { User } from \"~/utils/prisma.server\";\r\n\r\nexport function UserPanel({ users }: { users: User[] }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"w-1/6 bg-gray-200 flex flex-col\">\r\n      <div className=\"text-center bg-gray-300 h-20 flex items-center justify-center\">\r\n        <h2 className=\"text-xl text-blue-600 font-semibold\">My Team</h2>\r\n      </div>\r\n      <div className=\"flex-1 overflow-y-scroll py-4 flex flex-col gap-y-10\">\r\n        {users.map((user) => (\r\n          <UserCircle\r\n            key={user.id}\r\n            profile={user.profile}\r\n            className=\"h-24 w-24 mx-auto flex-shrink-0\"\r\n            onClick={() => navigate(`kudo/${user.id}`)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"text-center p-6 bg-gray-300\">\r\n        <form action=\"/logout\" method=\"post\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n          >\r\n            Sign Out\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { Profile } from \"~/utils/prisma.server\";\r\n\r\ninterface props {\r\n  profile: Profile;\r\n  className?: string;\r\n  onClick?: (...args: any) => any;\r\n}\r\n\r\nexport function UserCircle({ profile, onClick, className }: props) {\r\n  return (\r\n    <div\r\n      className={`${className} cursor-pointer bg-gray-400 rounded-full flex justify-center items-center`}\r\n      onClick={onClick}\r\n    >\r\n      <h2>\r\n        {profile.firstName.charAt(0).toUpperCase()}\r\n        {profile.lastName.charAt(0).toUpperCase()}\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n", "import * as React from \"react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useLoaderData, useActionData } from \"@remix-run/react\";\r\n\r\nimport { Modal } from \"~/components/modal\";\r\nimport { UserCircle } from \"~/components/userCircle\";\r\nimport { SelectBox } from \"~/components/selectBox\";\r\nimport { Kudo } from \"~/components/kudo\";\r\nimport type { KudoStyle } from \"~/utils/prisma.server\";\r\nimport { colorMap, emojiMap } from \"~/utils/constants\";\r\nimport { getUser } from \"~/utils/auth.server\";\r\nimport { getUserById } from \"~/utils/user.server\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const { userId } = params;\r\n\r\n  if (typeof userId !== \"string\") {\r\n    return redirect(\"/home\");\r\n  }\r\n\r\n  const recipient = await getUserById(userId);\r\n  const user = await getUser(request);\r\n\r\n  return json({ recipient, user });\r\n};\r\n\r\nexport default function KudoModal() {\r\n  const { recipient, user } = useLoaderData();\r\n  const actionData = useActionData();\r\n\r\n  const [formError] = React.useState(actionData?.error || \"\");\r\n  const [formData, setFormData] = React.useState({\r\n    message: \"\",\r\n    style: {\r\n      backgroundColor: \"RED\",\r\n      textColor: \"WHITE\",\r\n      emoji: \"THUMBSUP\",\r\n    } as KudoStyle,\r\n  });\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    field: string\r\n  ) => {\r\n    setFormData((data) => ({ ...data, [field]: e.target.value }));\r\n  };\r\n\r\n  const handleStyleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    field: string\r\n  ) => {\r\n    setFormData((data) => ({\r\n      ...data,\r\n      style: {\r\n        ...data.style,\r\n        [field]: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const getOptions = (data: any) =>\r\n    Object.keys(data).reduce((acc: any[], curr) => {\r\n      acc.push({\r\n        name: curr.charAt(0).toUpperCase() + curr.slice(1).toLowerCase(),\r\n        value: curr,\r\n      });\r\n      return acc;\r\n    }, []);\r\n\r\n  const colors = getOptions(colorMap);\r\n  const emojis = getOptions(emojiMap);\r\n\r\n  return (\r\n    <Modal isOpen={true} className=\"w-2/3 p-10\">\r\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\r\n        {formError}\r\n      </div>\r\n      <form method=\"post\">\r\n        <input type=\"hidden\" value={recipient.id} name=\"recipientId\" />\r\n        <div className=\"flex flex-col md:flex-row gap-y-2 md:gap-y-0\">\r\n          <div className=\"text-center flex flex-col items-center gap-y-2 pr-8\">\r\n            <UserCircle profile={recipient.profile} className=\"h-24 w-24\" />\r\n            <p className=\"text-blue-300\">\r\n              {recipient.profile.firstName} {recipient.profile.lastName}\r\n            </p>\r\n            {recipient.profile.department && (\r\n              <span className=\"px-2 py-1 bg-gray-300 rounded-xl text-blue-300 w-auto\">\r\n                {recipient.profile.department[0].toUpperCase() +\r\n                  recipient.profile.department.toLowerCase().slice(1)}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"flex-1 flex flex-col gap-y-4\">\r\n            <textarea\r\n              name=\"message\"\r\n              className=\"w-full rounded-xl h-40 p-4\"\r\n              value={formData.message}\r\n              onChange={(e) => handleChange(e, \"message\")}\r\n              placeholder={`Say something nice about ${recipient.profile.firstName}...`}\r\n            />\r\n            <div className=\"flex flex-col items-center md:flex-row md:justify-start gap-x-4\">\r\n              <SelectBox\r\n                options={colors}\r\n                name=\"backgroundColor\"\r\n                value={formData.style.backgroundColor}\r\n                onChange={(e) => handleStyleChange(e, \"backgroundColor\")}\r\n                label=\"Background Color\"\r\n                containerClassName=\"w-36\"\r\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\r\n              />\r\n              <SelectBox\r\n                options={colors}\r\n                name=\"textColor\"\r\n                value={formData.style.textColor}\r\n                onChange={(e) => handleStyleChange(e, \"textColor\")}\r\n                label=\"Text Color\"\r\n                containerClassName=\"w-36\"\r\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\r\n              />\r\n              <SelectBox\r\n                options={emojis}\r\n                label=\"Emoji\"\r\n                name=\"emoji\"\r\n                value={formData.style.emoji}\r\n                onChange={(e) => handleStyleChange(e, \"emoji\")}\r\n                containerClassName=\"w-36\"\r\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <p className=\"text-blue-600 font-semibold mb-2\">Preview</p>\r\n        <div className=\"flex flex-col items-center md:flex-row gap-x-24 gap-y-2 md:gap-y-0\">\r\n          <Kudo profile={user.profile} kudo={formData} />\r\n          <div className=\"flex-1\" />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 w-80 h-12 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n", "import { createPortal } from \"react-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface props {\r\n  children: React.ReactNode;\r\n  wrapperId: string;\r\n}\r\n\r\nconst createWrapper = (wrapperId: string) => {\r\n  const wrapper = document.createElement(\"div\");\r\n  wrapper.setAttribute(\"id\", wrapperId);\r\n  document.body.appendChild(wrapper);\r\n  return wrapper;\r\n};\r\n\r\nexport const Portal: React.FC<props> = ({ children, wrapperId }) => {\r\n  const [wrapper, setWrapper] = useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(wrapperId);\r\n    let created = false;\r\n\r\n    if (!element) {\r\n      created = true;\r\n      element = createWrapper(wrapperId);\r\n    }\r\n\r\n    setWrapper(element);\r\n\r\n    return () => {\r\n      if (created && element?.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n      }\r\n    };\r\n  }, [wrapperId]);\r\n\r\n  if (wrapper === null) return null;\r\n\r\n  return createPortal(children, wrapper);\r\n};\r\n", "import { Portal } from \"./portal\";\r\nimport { useNavigate } from \"@remix-run/react\";\r\n\r\ninterface props {\r\n  children: React.ReactNode;\r\n  isOpen: boolean;\r\n  ariaLabel?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const Modal: React.FC<props> = ({\r\n  children,\r\n  isOpen,\r\n  ariaLabel,\r\n  className,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Portal wrapperId=\"modal\">\r\n      <div\r\n        className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\r\n        aria-labelledby={ariaLabel ?? \"modal-title\"}\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        onClick={() => navigate(\"/home\")}\r\n      ></div>\r\n      <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-scroll\">\r\n        <div\r\n          className={`${className} p-4 bg-gray-200 pointer-events-auto max-h-screen md:rounded-xl`}\r\n        >\r\n          {/* This is where the modal content is rendered  */}\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n", "interface props {\r\n  options: {\r\n    name: string;\r\n    value: any;\r\n  }[];\r\n  className?: string;\r\n  containerClassName?: string;\r\n  id?: string;\r\n  name?: string;\r\n  label?: string;\r\n  value?: any;\r\n  onChange?: (...args: any) => any;\r\n}\r\n\r\nexport function SelectBox({\r\n  options = [],\r\n  onChange = () => {},\r\n  className = \"\",\r\n  containerClassName = \"\",\r\n  name,\r\n  id,\r\n  value,\r\n  label,\r\n}: props) {\r\n  return (\r\n    <div>\r\n      <label htmlFor={id} className=\"text-blue-600 font-semibold\">\r\n        {label}\r\n      </label>\r\n      <div className={`flex items-center ${containerClassName} my-2`}>\r\n        <select\r\n          className={`${className} appearance-none`}\r\n          id={id}\r\n          name={name}\r\n          onChange={onChange}\r\n          value={value || \"\"}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.name} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <svg\r\n          className=\"w-4 h-4 fill-current text-gray-400 -ml-7 mt-1 pointer-events-none\"\r\n          viewBox=\"0 0 140 140\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g>\r\n            <path d=\"m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "export const colorMap = {\r\n  RED: \"text-red-400\",\r\n  GREEN: \"text-green-400\",\r\n  BLUE: \"text-blue-400\",\r\n  WHITE: \"text-white\",\r\n  YELLOW: \"text-yellow-300\",\r\n};\r\n\r\nexport const backgroundColorMap = {\r\n  RED: \"bg-red-400\",\r\n  GREEN: \"bg-green-400\",\r\n  BLUE: \"bg-blue-400\",\r\n  WHITE: \"bg-white\",\r\n  YELLOW: \"bg-yellow-300\",\r\n};\r\n\r\nexport const emojiMap = {\r\n  THUMBSUP: \"\uD83D\uDC4D\",\r\n  PARTY: \"\uD83C\uDF89\",\r\n  HANDSUP: \"\uD83D\uDE4C\uD83C\uDFFB\",\r\n};\r\n", "import { UserCircle } from \"~/components/userCircle\";\r\nimport type { Profile, Kudo as IKudo } from \"~/utils/prisma.server\";\r\nimport { colorMap, backgroundColorMap, emojiMap } from \"~/utils/constants\";\r\n\r\nexport function Kudo({\r\n  profile,\r\n  kudo,\r\n}: {\r\n  profile: Profile;\r\n  kudo: Partial<IKudo>;\r\n}) {\r\n  return (\r\n    <div\r\n      className={`flex ${\r\n        backgroundColorMap[kudo.style?.backgroundColor || \"RED\"]\r\n      } p-4 rounded-xl w-full gap-x-2 relative`}\r\n    >\r\n      <div>\r\n        <UserCircle profile={profile} className=\"h-16 w-16\" />\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <p\r\n          className={`${\r\n            colorMap[kudo.style?.textColor || \"WHITE\"]\r\n          } font-bold text-lg whitespace-pre-wrap break-all`}\r\n        >\r\n          {profile.firstName} {profile.lastName}\r\n        </p>\r\n        <p\r\n          className={`${\r\n            colorMap[kudo.style?.textColor || \"WHITE\"]\r\n          } whitespace-pre-wrap break-all`}\r\n        >\r\n          {kudo.message}\r\n        </p>\r\n      </div>\r\n      <div className=\"absolute bottom-4 right-4 bg-white rounded-full h-10 w-10 flex items-center justify-center text-2xl\">\r\n        {emojiMap[kudo.style?.emoji || \"THUMBSUP\"]}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'31dbe842','entry':{'module':'/build/entry.client-HTSFNPAO.js','imports':['/build/_shared/chunk-SXNYENQH.js','/build/_shared/chunk-A4ZIDI2W.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-K6T7VSJ7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-QL43SKR3.js','imports':['/build/_shared/chunk-ID5ZAS3Z.js','/build/_shared/chunk-452XUABV.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/kudo.$userId':{'id':'routes/home/kudo.$userId','parentId':'routes/home','path':'kudo/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/kudo.$userId-7UXNZ5OE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4G5YA66P.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-GEA6PPTD.js','imports':['/build/_shared/chunk-ID5ZAS3Z.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-MAPHPU2V.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-31DBE842.js'};", "\nimport * as entryServer from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\root.tsx\";\nimport * as route1 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\routes\\\\logout.ts\";\nimport * as route2 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\routes\\\\index.ts\";\nimport * as route3 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\routes\\\\login.tsx\";\nimport * as route4 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\routes\\\\home.tsx\";\nimport * as route5 from \"D:\\\\workshops\\\\prisma-mongodb\\\\kudos\\\\app\\\\routes\\\\home\\\\kudo.$userId.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/home/kudo.$userId\": {\n      id: \"routes/home/kudo.$userId\",\n      parentId: \"routes/home\",\n      path: \"kudo/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": []
}
